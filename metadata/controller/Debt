{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Debt"
    },
    "designerId": "9492a36c-015b-4b23-8dad-68f6f48b9841",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onAddDebtTap",
                "fn": "onAddDebtTap",
                "implHandler": [
                    "var form = this.getDebtDetail();",
                    "form.reset();",
                    "form.setRecord(null); //remove record from form",
                    "",
                    "//sets date field to today",
                    "form.down('datepickerfield').setValue(new Date());",
                    "",
                    "//clears filter placed on Payment store",
                    "Ext.getStore('Payments').clearFilter();",
                    "",
                    "//hides buttons and payment data view on new debts",
                    "this.getAddPaymentButton().hide();",
                    "this.getMyPaymentDataView().hide();",
                    "this.getEmailDebtButton().hide();",
                    "this.getDebtHeaderLabel().hide();",
                    "this.getPaymentHistoryLabel().hide();",
                    "",
                    "//remember previous panel to return to",
                    "this.prevPanel = Ext.Viewport.getActiveItem();",
                    "",
                    "//set selectfield to record name if exists",
                    "var prevRecord = this.prevPanel.getRecord();",
                    "if(prevRecord) {",
                    "    var name = prevRecord.get('name');",
                    "    form.down('selectfield').setValue(name);",
                    "}",
                    "",
                    "//update url",
                    "this.getApplication().getHistory().add(new Ext.app.Action({",
                    "    url: '/Debt/add'",
                    "}), true);",
                    "",
                    "//set active item",
                    "Ext.Viewport.setActiveItem(form);"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#addDebt"
            },
            "designerId": "7321cce9-05f4-4795-9b24-0907999e2718"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "DebtDetail",
                "autoCreate": true,
                "ref": "DebtDetail",
                "selector": "DebtDetail",
                "xtype": "DebtDetail"
            },
            "designerId": "0c423b35-6060-4423-861a-4920bfcf483b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onSaveDebtTap",
                "fn": "onSaveDebtTap",
                "implHandler": [
                    "",
                    "var form = this.getDebtDetail(),",
                    "    record = form.getRecord(),",
                    "    values = form.getValues(),",
                    "    person = this.getDebtDetail().down('selectfield').record; //gets person from selectfield",
                    "",
                    "    values.amount = (values.amount)?values.amount.toFixed(2):0;",
                    "",
                    "",
                    "if(record) { //edit old record",
                    "",
                    "    //sets values from form into record",
                    "    record.set(values);",
                    "",
                    "    //if the person is changed in the record",
                    "    if (record.isModified('person_id')) {",
                    "        record.getPerson().debts().remove(record); //remove debts from old",
                    "        record.setPerson(values.person_id); //sets new person",
                    "",
                    "        //bug in the framework(reported as TOUCH-3106),sets up the Person instance again with the correct person value",
                    "        delete record.PersonBelongsToInstance;",
                    "        record.getPerson(); // bug, Sets up the Person instance reference again",
                    "    }",
                    "",
                    "    record.set('balance',0); //setting the balance calls the convert field again to update the debt",
                    "    record.save();",
                    "",
                    "} else {  //new record ",
                    "    var debt = person.debts().add(values)[0]; //add values",
                    "    person.debts().sync();",
                    "    debt.getPerson(); //bug in the framework(reported as TOUCH-3073), this associates the debt with the person in the store",
                    "}",
                    "",
                    "//calc balance for the person",
                    "person.calcBalance();",
                    "",
                    "//load data into debt store from localStorage",
                    "Ext.getStore('Debts').load();",
                    "",
                    "//update people store",
                    "Ext.getStore('People').load(function(){",
                    "    this.getApplication().getController('Summary').updateSummary();",
                    "},",
                    "this);",
                    "",
                    "//refresh debt panel dataview with any new data",
                    "this.getMainView().getInnerItems()[1].down('dataview').refresh();",
                    "",
                    "//update url",
                    "this.getApplication().getHistory().add(new Ext.app.Action({",
                    "    url: '/Debt'",
                    "}), true);",
                    "",
                    "//set active item",
                    "Ext.Viewport.setActiveItem(this.prevPanel);"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#saveDebt"
            },
            "designerId": "41642191-b6dc-49b4-8792-54648b41bd19"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onCanelButtonTap",
                "fn": "onCanelButtonTap",
                "implHandler": [
                    "this.getDebtDetail().reset(); //reset form",
                    "",
                    "//update url",
                    "if(this.prevPanel instanceof Payback.view.MainView) {",
                    "    this.getApplication().getHistory().add(new Ext.app.Action({",
                    "        url: '/Debt'",
                    "    }), true);",
                    "}",
                    "",
                    "//set active item",
                    "Ext.Viewport.setActiveItem(this.prevPanel);"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#cancelDebt"
            },
            "designerId": "1268a6d4-9362-47de-97d5-4d9a8caecdcf"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onDataviewItemSwipe",
                "fn": "onDataviewItemSwipe",
                "implHandler": [
                    "var deleteButtons = dataview.query('button');",
                    "",
                    "//hides other delete buttons",
                    "for (var i=0; i < deleteButtons.length; i++) {",
                    "    deleteButtons[i].hide();",
                    "}",
                    "",
                    "var labels = Ext.select(target.getObservableId() +' .money-label');",
                    "labels.hide();",
                    "",
                    "//shows current delete button",
                    "target.query('button')[0].show();",
                    "",
                    "//hides delete button if anywhere else is tapped",
                    "Ext.Viewport.element.on({tap:function(){",
                    "    target.query('button')[0].hide();",
                    "    labels.show();",
                    "}, single:true});"
                ],
                "name": "itemswipe",
                "designer|targetType": "Ext.dataview.DataView",
                "designer|controlQuery": "#myDebtDataView"
            },
            "designerId": "b355c721-c09e-47e2-acfe-ef3f61570186"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "myDebtDataView",
                "ref": "myDebtDataView",
                "selector": "#myDebtDataView"
            },
            "designerId": "e5505c69-da54-4c0b-a1e4-89201b79a9b7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onDataviewItemTap",
                "fn": "onDataviewItemTap",
                "implHandler": [
                    "",
                    "var form = this.getDebtDetail();",
                    "form.setRecord(record); //sets record for the form",
                    "",
                    "//clears filter on store and sets a new one, this shows only the payments associated with the debt tapped",
                    "Ext.getStore('Payments').clearFilter();",
                    "Ext.getStore('Payments').filter(\"debt_id\", record.get('id'));",
                    "",
                    "//update debt balance label",
                    "var header = this.getDebtHeaderLabel();",
                    "var balance = record.get('balance');",
                    "var str = ((balance<0)?'-':'')+'$'+Math.abs(balance).toFixed(2);",
                    "header.setHtml(str);",
                    "",
                    "//show hidden components if any",
                    "this.getAddPaymentButton().show();",
                    "this.getMyPaymentDataView().show();",
                    "this.getEmailDebtButton().show();",
                    "this.getDebtHeaderLabel().show();",
                    "this.getPaymentHistoryLabel().show();",
                    "",
                    "//remember previous panel to return to",
                    "this.prevPanel = Ext.Viewport.getActiveItem();",
                    "",
                    "//scroll to top",
                    "this.getDebtDetail().getScrollable().getScroller().scrollToTop();",
                    "",
                    "//update url if not on contact detail",
                    "if(dataview.up('panel') instanceof Payback.view.Debts) {",
                    "    this.getApplication().getHistory().add(new Ext.app.Action({",
                    "        url: '/Debt/' + (index+1)",
                    "    }), true);",
                    "}",
                    "",
                    "Ext.Viewport.setActiveItem(form);",
                    "",
                    "//set headerLabel font size, this needs to be after the active item is set",
                    "var fontSize = 75;",
                    "var maxHeight = header.getHeight();",
                    "var maxWidth = Ext.Viewport.getWindowWidth()-20;",
                    "var textHeight;",
                    "var textWidth;",
                    "do {",
                    "    header.setStyle({'font-size': fontSize+'px'});",
                    "    textHeight = header.innerHtmlElement.getHeight();",
                    "    textWidth = header.innerHtmlElement.getWidth();",
                    "    fontSize = fontSize - 1;",
                    "} while ((textHeight > maxHeight || textWidth > maxWidth) && fontSize > 3);",
                    "header.setStyle({'padding-top': (100-textHeight)/2+'px'}); //center text"
                ],
                "name": "itemtap",
                "designer|targetType": "Ext.dataview.DataView",
                "designer|controlQuery": "#myDebtDataView"
            },
            "designerId": "134cdc4d-ba1b-4076-a82a-ed7289c7d19e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "myPaymentDataView",
                "ref": "myPaymentDataView",
                "selector": "#myPaymentDataView"
            },
            "designerId": "70b9b9b5-ad74-4ac2-b69e-0954dacaf1c8"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "addPaymentButton",
                "ref": "addPaymentButton",
                "selector": "#addPayment"
            },
            "designerId": "ab82322c-a104-4718-a518-36eb7317a2f6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onEmailDebtTap",
                "fn": "onEmailDebtTap",
                "implHandler": [
                    "",
                    "var record = this.getDebtDetail().getRecord();",
                    "record.set('balance',0); //calls convert field again on debt, this updates the debt with any new payments added to debt",
                    "",
                    "var person = this.getDebtDetail().down('selectfield').record, //gets person from selectfield",
                    "email = person.get('email'),",
                    "name = person.get('name'),",
                    "subject = encodeURIComponent(\"Where's my money?!\"),",
                    "body = encodeURIComponent(\"Dear \"+name+\",\\n\\nYou owe me $\"+record.get('balance')+\". Pay soon or my friend Li'l Abe will come pay ya a visit.\\n\\nSincerely,\\n\\nYour friendly neighborhood loan shark\");",
                    "",
                    "window.location.href = \"mailto:\"+email+\"?subject=\" + subject+\"&body=\"+body; "
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "#emailDebt"
            },
            "designerId": "f186ce03-ea76-4de8-b6bc-39e0677c0662"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "emailDebtButton",
                "ref": "emailDebtButton",
                "selector": "#emailDebt"
            },
            "designerId": "abf86e40-f07e-4204-88e3-b05f9f673a97"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "MainView",
                "ref": "MainView",
                "selector": "MainView"
            },
            "designerId": "d6ca54aa-56fa-4231-8835-82934730d4a1"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "addDebtButton",
                "ref": "addDebtButton",
                "selector": "#addDebt"
            },
            "designerId": "cc2e8b92-fdd1-400a-97bd-1b9e91767da8"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "debtHeaderLabel",
                "ref": "debtHeaderLabel",
                "selector": "#debtHeaderLabel"
            },
            "designerId": "e8ec462a-96b4-4987-bd85-789367c18be8"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "paymentHistoryLabel",
                "ref": "paymentHistoryLabel",
                "selector": "#paymentHistoryLabel"
            },
            "designerId": "722c9d57-b862-4057-befa-fd3f9e29bb97"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "url": "/Debt/:id",
                "designer|userClassName": "gotoDebtDetail",
                "fn": "gotoDebtDetail",
                "designer|params": [
                    "id"
                ],
                "implHandler": [
                    "",
                    "this.getMainView().setActiveItem(1);",
                    "",
                    "if(id==\"add\") {",
                    "    this.getAddDebtButton().onTap();",
                    "} else {",
                    "",
                    "    id--;",
                    "    var dataView = this.getMyDebtDataView();",
                    "    var dataItem = dataView.getItems().getAt(0).getInnerItems()[id];",
                    "",
                    "    if(dataItem) {",
                    "        this.onDataviewItemTap(dataView,id,null, dataItem.getRecord());  ",
                    "    }",
                    "}"
                ]
            },
            "designerId": "69d50fef-47fd-4c29-8e8d-079d944ebc84"
        }
    ]
}